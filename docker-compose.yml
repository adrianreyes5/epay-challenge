services:
  db:
    image: mysql:8
    container_name: wallet-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-uroot",
          "-p${DB_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${DB_PORT}:${DB_DOCKER_PORT}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - wallet-network

  api-db:
    build: ./backend/api-db
    container_name: wallet-api-db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${API_DB_PORT}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
    ports:
      - ${API_DB_PORT}:${API_DB_PORT}
    volumes:
      - ./backend/api-db:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - wallet-network

  api-gateway:
    build: ./backend/api-gateway
    container_name: wallet-api-gateway
    environment:
      - PORT=${API_GATEWAY_PORT}
      - API_DB_URL=${API_DB_URL}
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    volumes:
      - ./backend/api-gateway:/app
      - /app/node_modules
    depends_on:
      - api-db
    networks:
      - wallet-network

  frontend:
    build: ./frontend
    container_name: wallet-frontend
    environment:
      - PORT=${FRONTEND_PORT}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - api-gateway
    networks:
      - wallet-network

networks:
  wallet-network:
    driver: bridge

volumes:
  mysql_data:
