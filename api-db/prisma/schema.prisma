 

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-arm64-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  DEPOSIT
  PAYMENT
}

enum PaymentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  EXPIRED
}

model Client {
  id        Int      @id @default(autoincrement())
  document  String   @unique
  firstName String
  lastName  String
  email     String   @unique
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wallet    Wallet?
  paymentSessions PaymentSession[]

  @@map("clients")
}
 
model Wallet {
  id        Int      @id @default(autoincrement())
  clientId  Int      @unique
  balance   Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client   @relation(fields: [clientId], references: [id])
  transactions Transaction[]

  @@map("wallets")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  walletId    Int
  type        TransactionType
  amount      Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  wallet      Wallet   @relation(fields: [walletId], references: [id])

  @@map("transactions")
}

model PaymentSession {
  id        Int      @id @default(autoincrement())
  clientId  Int
  amount    Float
  token     String
  status    PaymentStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  client    Client   @relation(fields: [clientId], references: [id])

  @@map("payment_sessions")
}
